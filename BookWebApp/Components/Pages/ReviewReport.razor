@page "/ReviewReport"
@attribute [StreamRendering]

<PageTitle>Review Report</PageTitle>
<title> Review Report </title>
<h1>Review Report</h1>



@if (reviews == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Title</th>
                <th>Author</th>
                <th>Reviewer</th>
                <th>Rating</th>
                <th>Comment</th>
            </tr>
        </thead>
        <tbody>
            @for (int i = 0; i < reviews.Count; i++)
            {
                
                <tr>
                    <td>@reviews[i].Title</td>
                    <td>@reviews[i].Author</td>
                    <td>@reviews[i].Reviewer</td>
                    <td>@reviews[i].Rating</td>
                    <td>@reviews[i].Comment</td>
                </tr>

                if(reviews.Count == 0)
                {
                    <p>No data found!</p>
                }
            }

            
            

        </tbody>
    </table>
}


@code {
    // yes i did just reuse the weather code:D 

    public List<Review> reviews = new List<Review> { };
    
    protected override async Task OnInitializedAsync()
    {
        // Simulate asynchronous loading to demonstrate streaming rendering
        await Task.Delay(500);

        var file = "wwwroot/Data/testdata.csv";

        using (var reader = new StreamReader(file))
        {

            try
            {
                string line;

                while ((line = reader.ReadLine()) != null)
                {
                    reviews.Add(Review.Parse(line));
                    /// note to self because this literally cost me no less than 2 hours - append doesn't work with lists (or arrays in webdev for some reason?????)
                }  

            } catch (Exception e)
            {
                Console.WriteLine("error rofl");
            }

            
        }

    }

    
}
